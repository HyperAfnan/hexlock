type Category = record {
  name : text;
  created_at : int;
};

type PasswordView = record {
  id : nat;
  encrypted_name : text;
  encrypted_username : text;
  encrypted_password : text;
  encrypted_url : text;
  encrypted_notes : text;
  category_name : text;
  created_at : int;
  updated_at : int;
};

type PublicKeyReply = record {
  public_key_hex : text;
};

type SignatureReply = record {
  signature_hex : text;
};

service : {
  add_password : (text, text, text, text, text, text) -> (variant { Ok : nat; Err : text });
  delete_password : (nat) -> (variant { Ok; Err : text });
  derive_user_key : () -> (variant { Ok : text; Err : text });
  export_vault : () -> (variant { Ok : vec PasswordView; Err : text });
  get_categories : query () -> (variant { Ok : vec text; Err : text });
  get_passwords : query () -> (variant { Ok : vec PasswordView; Err : text });
  get_user_info : query () -> (text, text);
  health_check : query () -> (bool);
  public_key : () -> (variant { Ok : PublicKeyReply; Err : text });
  sign : (text) -> (variant { Ok : SignatureReply; Err : text });
  system_stats : query () -> (nat, nat, int);
  update_password : (nat, text, text, text, text, text, text) -> (variant { Ok; Err : text });
}
